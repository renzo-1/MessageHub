[{"E:\\mern-project\\front-end\\src\\index.js":"1","E:\\mern-project\\front-end\\src\\App.js":"2","E:\\mern-project\\front-end\\src\\components\\user\\register.js":"3","E:\\mern-project\\front-end\\src\\components\\user\\login.js":"4","E:\\mern-project\\front-end\\src\\components\\flashError.js":"5","E:\\mern-project\\front-end\\src\\components\\messages\\main.js":"6","E:\\mern-project\\front-end\\src\\components\\messages\\messages.js":"7","E:\\mern-project\\front-end\\src\\components\\messages\\searchContact.js":"8","E:\\mern-project\\front-end\\src\\components\\navbar.js":"9"},{"size":259,"mtime":1671505934738,"results":"10","hashOfConfig":"11"},{"size":590,"mtime":1671858226714,"results":"12","hashOfConfig":"11"},{"size":2838,"mtime":1671516114864,"results":"13","hashOfConfig":"11"},{"size":3414,"mtime":1671762790390,"results":"14","hashOfConfig":"11"},{"size":473,"mtime":1671762731215,"results":"15","hashOfConfig":"11"},{"size":3595,"mtime":1671762414320,"results":"16","hashOfConfig":"11"},{"size":4532,"mtime":1671762932963,"results":"17","hashOfConfig":"11"},{"size":3117,"mtime":1671762960419,"results":"18","hashOfConfig":"11"},{"size":1476,"mtime":1671534623284,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1c783hx",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"23"},"E:\\mern-project\\front-end\\src\\index.js",[],[],[],"E:\\mern-project\\front-end\\src\\App.js",["51"],[],"E:\\mern-project\\front-end\\src\\components\\user\\register.js",[],[],"E:\\mern-project\\front-end\\src\\components\\user\\login.js",["52"],[],"E:\\mern-project\\front-end\\src\\components\\flashError.js",["53"],[],"E:\\mern-project\\front-end\\src\\components\\messages\\main.js",["54","55","56"],[],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport FlashError from \"../flashError\";\r\nimport Messages from \"./messages\";\r\nimport SearchContact from \"./searchContact\";\r\nimport Navbar from \"../navbar\";\r\n\r\nconst controller = new AbortController();\r\n\r\nexport default function Main() {\r\n  const [error, setError] = useState({ status: 200, message: \"\" });\r\n  const [selectedConvo, setSelectedConvo] = useState(null);\r\n  const [deleteConvoID, setDeleteConvoID] = useState(\"\");\r\n  const [userData, setUserData] = useState({\r\n    currentUser: {},\r\n    convoList: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // load user data\r\n    axios\r\n      .get(\"/api/convo\", { withCredentials: true })\r\n      .then((res) => {\r\n        setUserData({\r\n          currentUser: res.data.contactInfo,\r\n          convoList: res.data.convoList,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setError({ status: err.response.status, message: err.message });\r\n        console.log(err);\r\n      });\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, []);\r\n\r\n  function handleDeleteConvo(e) {\r\n    axios\r\n      .post(`/api/convo/${deleteConvoID}?_method=DELETE`, {\r\n        withCredentials: true,\r\n      })\r\n      .catch((err) => {\r\n        setError({ status: err.response, message: \"Server Error\" });\r\n      });\r\n  }\r\n\r\n  if (error.status !== 200) {\r\n    return (\r\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 p-28 rounded-lg bg-white drop-shadow-lg border border-rose-900 text-center text-2xl\">\r\n        <FlashError status={error.status} message={error.message} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"md:container h-screen overflow-hidden pt-28 pb-10 flex relative\">\r\n        <div className=\"w-1/4 h-full p-8 mr-8 rounded-3xl bg-lighter-grey drop-shadow-lg\">\r\n          {<SearchContact />}\r\n          <ul className=\"mt-8 space-y-3\">\r\n            {userData.convoList.map((convo, i) => (\r\n              <li className=\"list-none relative flex items-center\" key={i}>\r\n                <button\r\n                  className=\"w-full py-2 border-b border-slate-700 text-xl text-left font-medium text-slate-100 tracking-widest\"\r\n                  onClick={() => setSelectedConvo(convo._id)}\r\n                  // href={`/convo/${convo._id}`}\r\n                >\r\n                  {userData.currentUser._id === convo.sender._id\r\n                    ? convo.receiver.username\r\n                    : convo.sender.username}\r\n                </button>\r\n                <form\r\n                  className=\"inline-block absolute right-0 \"\r\n                  onSubmit={handleDeleteConvo}\r\n                >\r\n                  <button\r\n                    value={deleteConvoID}\r\n                    onClick={() => {\r\n                      setDeleteConvoID(convo._id);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className=\"h-5 w-5\"\r\n                      src=\"/deleteIcon.svg\"\r\n                      alt=\"delete button\"\r\n                    />\r\n                  </button>\r\n                </form>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"w-3/4 h-full relative\">\r\n          {selectedConvo && (\r\n            <Messages\r\n              // id={convoID}\r\n              id={selectedConvo}\r\n              currentUser={userData.currentUser.username}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\mern-project\\front-end\\src\\components\\messages\\messages.js",[],[],"E:\\mern-project\\front-end\\src\\components\\messages\\searchContact.js",["57","58","59"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FlashError from \"../flashError\";\r\nconst controller = new AbortController();\r\n\r\nexport default function SearchContact() {\r\n  const [result, setResult] = useState();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [error, setError] = useState({ status: 200, message: \"\" });\r\n  const [addUserID, setAddUserID] = useState(\"\");\r\n\r\n  function handleSearchUser(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`/api/convo?username=${username}`, { withCredentials: true })\r\n      .then((res) => {\r\n        setResult(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setError({ status: err.response, message: err.response });\r\n      });\r\n    setUsername(username);\r\n  }\r\n\r\n  function handleAddUser(e) {\r\n    axios\r\n      .post(`/api/convo`, { withCredentials: true, id: addUserID })\r\n      .catch((err) => {\r\n        setError({ status: err.response, message: err.response });\r\n      });\r\n  }\r\n  if (error.status !== 200) {\r\n    return (\r\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 p-28 rounded-lg bg-white drop-shadow-lg border border-rose-900 text-center text-2xl\">\r\n        <FlashError\r\n          status={error.status.status}\r\n          message={error.message.statusText}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <form\r\n          className=\"w-full whitespace-nowrap relative flex items-center\"\r\n          onSubmit={handleSearchUser}\r\n        >\r\n          <input\r\n            className=\"p-2 w-full text-slate-100 rounded-2xl border bg-transparent border-slate-300\"\r\n            required\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Find user\"\r\n          />\r\n          <button className=\"p-3 absolute right-0\">\r\n            <img className=\"h-4 w-4\" src=\"/searchIcon.svg\" />\r\n          </button>\r\n        </form>\r\n        {result && result.length > 0 && (\r\n          <div className=\"p-3 w-full rounded-b-2xl bg-lighter-grey drop-shadow-lg\">\r\n            <form\r\n              className=\"whitespace-nowrap flex items-center justify-center space-x-2\"\r\n              onSubmit={handleAddUser}\r\n            >\r\n              <h3 className=\"font-light text-lg text-slate-100\">\r\n                {result[0].username}\r\n              </h3>\r\n              <button\r\n                value={addUserID}\r\n                onClick={() => setAddUserID(result[0]._id)}\r\n              >\r\n                <img\r\n                  className=\"h-6 w-6\"\r\n                  src=\"/addContact.svg\"\r\n                  alt=\"delete button\"\r\n                />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n        {result && result.length === 0 && (\r\n          <div className=\"p-3 w-full rounded-b-2xl bg-lighter-grey drop-shadow-lg\">\r\n            <h3 className=\"font-medium text-md text-slate-100\">\r\n              No User Found\r\n            </h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\mern-project\\front-end\\src\\components\\navbar.js",["60"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Navbar() {\r\n  const [error, setError] = useState({ status: 200, message: \"\" });\r\n  const navigate = useNavigate();\r\n  function handleLogout() {\r\n    // log out the user from backend\r\n    axios\r\n      .get(\"/api/logout\", { withCredentials: true })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setError({ status: res.status, message: res.statusText });\r\n      })\r\n      .catch((err) => {\r\n        setError({ status: err.response, message: err.response });\r\n      });\r\n    // set the is loggedIn to false so that we can redirect to /login\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    navigate(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-20 absolute top-0 border-b border-slate-700 bg-bg-grey drop-shadow-lg z-10\">\r\n      <div className=\"md:container h-full w-full flex items-center justify-between\">\r\n        <h1 className=\"text-slate-100 text-lg font-bold\">MessageHub</h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          type=\"submit\"\r\n          className=\"text-slate-100 space-x-1 z-20\"\r\n          //   href=\"/login\"\r\n        >\r\n          <p className=\"inline-block\">Sign out</p>\r\n          <img\r\n            className=\"w-7 h-7 inline-block\"\r\n            src=\"/logoutIcon.svg\"\r\n            alt=\"sign out\"\r\n          ></img>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"61","severity":1,"message":"62","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":45,"column":6,"nodeType":"67","endLine":45,"endColumn":8,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":18},{"ruleId":"61","severity":1,"message":"70","line":1,"column":38,"nodeType":"63","messageId":"64","endLine":1,"endColumn":45},{"ruleId":"61","severity":1,"message":"69","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":18},{"ruleId":"61","severity":1,"message":"71","line":2,"column":20,"nodeType":"63","messageId":"64","endLine":2,"endColumn":29},{"ruleId":"61","severity":1,"message":"72","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":36},{"ruleId":"61","severity":1,"message":"73","line":4,"column":7,"nodeType":"63","messageId":"64","endLine":4,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":60,"column":13,"nodeType":"76","endLine":60,"endColumn":62},{"ruleId":"61","severity":1,"message":"77","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["78"],"'Navigate' is defined but never used.","'useMemo' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'controller' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.",{"desc":"79","fix":"80"},"Update the dependencies array to be: [navigate]",{"range":"81","text":"82"},[1292,1294],"[navigate]"]