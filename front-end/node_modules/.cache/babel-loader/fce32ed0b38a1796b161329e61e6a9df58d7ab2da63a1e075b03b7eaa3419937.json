{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern-project\\\\front-end\\\\src\\\\components\\\\messages\\\\convoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport FlashError from \"../flashError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConvoList() {\n  _s();\n  const [error, setError] = useState({\n    status: '',\n    message: ''\n  });\n  const [userData, setUserData] = useState({\n    currentUser: {},\n    convoList: [],\n    foundContact: undefined\n  });\n  // const [convoID, setConvoID] = convo._id;\n  // const {_id: senderID, username: senderUsername} = convo.sender; \n  // const {username: receiverUsername} = convo.receiver; \n  // const currentUserID = user._id;\n\n  useEffect(() => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    // load user data\n    axios.get('/api/convo', {\n      withCredentials: true,\n      cancelToken: source.token\n    }).then(res => {\n      setUserData({\n        currentUser: res.data.contactInfo,\n        convoList: res.data.convoList,\n        foundContact: res.data.foundContact\n      });\n      setError({\n        status: res.status,\n        message: res.statusText\n      });\n    }).catch(err => {\n      if (axios.isCancel(err)) {\n        console.log('successfully aborted');\n      } else {\n        console.log(err);\n        setError({\n          status: err.response.status,\n          message: err.response.statusText\n        });\n      }\n    });\n    // cancel the request before component unmounts\n    return () => {\n      source.cancel();\n    };\n  }, []);\n  if (error.status !== 200) {\n    return /*#__PURE__*/_jsxDEV(FlashError, {\n      status: error.status,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 39\n    }, this);\n  }\n  ;\n\n  // if the current user is sender, use the receiver of the convo as the convo name\n  // if the current user is the receiver of the convo, use the sender as the convo name\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userData.convoList.map((convo, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/convo/${convo._id}`,\n        children: [\" \", userData.currentUser._id === convo.sender._id ? convo.receiver.username : convo.sender.username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_s(ConvoList, \"m+umbCb9zkiZ51OlmsOBJgrQfNk=\");\n_c = ConvoList;\nvar _c;\n$RefreshReg$(_c, \"ConvoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","FlashError","ConvoList","error","setError","status","message","userData","setUserData","currentUser","convoList","foundContact","undefined","CancelToken","source","get","withCredentials","cancelToken","token","then","res","data","contactInfo","statusText","catch","err","isCancel","console","log","response","cancel","map","convo","i","_id","sender","receiver","username"],"sources":["E:/mern-project/front-end/src/components/messages/convoList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from  'axios';\r\nimport FlashError from \"../flashError\";\r\n\r\nexport default function ConvoList(){\r\n    const [error, setError] = useState({status: '', message: ''});\r\n    const [userData, setUserData] = useState({\r\n        currentUser: {},\r\n        convoList: [],\r\n        foundContact: undefined,\r\n    })\r\n    // const [convoID, setConvoID] = convo._id;\r\n    // const {_id: senderID, username: senderUsername} = convo.sender; \r\n    // const {username: receiverUsername} = convo.receiver; \r\n    // const currentUserID = user._id;\r\n\r\n\r\n    useEffect(()=>{\r\n        const CancelToken = axios.CancelToken;\r\n        const source = CancelToken.source();\r\n        // load user data\r\n        axios.get('/api/convo', {withCredentials : true, cancelToken: source.token})\r\n        .then(res => {\r\n            setUserData({\r\n                currentUser: res.data.contactInfo,\r\n                convoList: res.data.convoList,\r\n                foundContact: res.data.foundContact,\r\n            })\r\n            setError({status: res.status, message: res.statusText})\r\n        })\r\n        .catch((err) =>{\r\n            if (axios.isCancel(err)) {\r\n                console.log('successfully aborted');\r\n            } else {\r\n                console.log(err)\r\n                setError({status:  err.response.status, message: err.response.statusText})\r\n            }\r\n        })\r\n        // cancel the request before component unmounts\r\n        return () => {\r\n            source.cancel();\r\n        };\r\n    }, []);\r\n\r\n\r\n    if (error.status !== 200) {return <FlashError status={error.status} message={error.message}/>};\r\n\r\n     // if the current user is sender, use the receiver of the convo as the convo name\r\n     // if the current user is the receiver of the convo, use the sender as the convo name\r\n    return (\r\n        <>\r\n            {userData.convoList.map((convo, i) => \r\n            <li key={i}>\r\n            <a href={`/convo/${convo._id}`}> {userData.currentUser._id === convo.sender._id? convo.receiver.username: convo.sender.username} </a>\r\n            </li>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAO,OAAO;AAC1B,OAAOC,UAAU,MAAM,eAAe;AAAC;AAAA;AAEvC,eAAe,SAASC,SAAS,GAAE;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAACO,MAAM,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACrCW,WAAW,EAAE,CAAC,CAAC;IACfC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAEC;EAClB,CAAC,CAAC;EACF;EACA;EACA;EACA;;EAGAb,SAAS,CAAC,MAAI;IACV,MAAMc,WAAW,GAAGb,KAAK,CAACa,WAAW;IACrC,MAAMC,MAAM,GAAGD,WAAW,CAACC,MAAM,EAAE;IACnC;IACAd,KAAK,CAACe,GAAG,CAAC,YAAY,EAAE;MAACC,eAAe,EAAG,IAAI;MAAEC,WAAW,EAAEH,MAAM,CAACI;IAAK,CAAC,CAAC,CAC3EC,IAAI,CAACC,GAAG,IAAI;MACTZ,WAAW,CAAC;QACRC,WAAW,EAAEW,GAAG,CAACC,IAAI,CAACC,WAAW;QACjCZ,SAAS,EAAEU,GAAG,CAACC,IAAI,CAACX,SAAS;QAC7BC,YAAY,EAAES,GAAG,CAACC,IAAI,CAACV;MAC3B,CAAC,CAAC;MACFP,QAAQ,CAAC;QAACC,MAAM,EAAEe,GAAG,CAACf,MAAM;QAAEC,OAAO,EAAEc,GAAG,CAACG;MAAU,CAAC,CAAC;IAC3D,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAI;MACX,IAAIzB,KAAK,CAAC0B,QAAQ,CAACD,GAAG,CAAC,EAAE;QACrBE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC,CAAC,MAAM;QACHD,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChBrB,QAAQ,CAAC;UAACC,MAAM,EAAGoB,GAAG,CAACI,QAAQ,CAACxB,MAAM;UAAEC,OAAO,EAAEmB,GAAG,CAACI,QAAQ,CAACN;QAAU,CAAC,CAAC;MAC9E;IACJ,CAAC,CAAC;IACF;IACA,OAAO,MAAM;MACTT,MAAM,CAACgB,MAAM,EAAE;IACnB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,IAAI3B,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;IAAC,oBAAO,QAAC,UAAU;MAAC,MAAM,EAAEF,KAAK,CAACE,MAAO;MAAC,OAAO,EAAEF,KAAK,CAACG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;EAAC;;EAE7F;EACA;EACD,oBACI;IAAA,UACKC,QAAQ,CAACG,SAAS,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACjC;MAAA,uBACA;QAAG,IAAI,EAAG,UAASD,KAAK,CAACE,GAAI,EAAE;QAAA,gBAAG3B,QAAQ,CAACE,WAAW,CAACyB,GAAG,KAAKF,KAAK,CAACG,MAAM,CAACD,GAAG,GAAEF,KAAK,CAACI,QAAQ,CAACC,QAAQ,GAAEL,KAAK,CAACG,MAAM,CAACE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IAAM,GAD5HJ,CAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EACJ,iBACF;AAEX;AAAC,GAtDuB/B,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}