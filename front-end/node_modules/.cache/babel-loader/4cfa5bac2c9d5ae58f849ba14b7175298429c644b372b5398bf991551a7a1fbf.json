{"ast":null,"code":"// import axios from 'axios';\n// import React, {useState,useEffect} from 'react';\n// import FlashError from \"../flashError\";\n\n// export default function SearchContact(searchedUsername){\n//     const [searchedResult, setSearchedResult] = useState();\n//     const [error, setError] = useState({status: 200, message: ''});\n\n//     useEffect(() => {\n//         const CancelToken = axios.CancelToken;\n//         const source = CancelToken.source();\n//         axios.get(`/api/convo`, {params: { username: searchedUsername }, withCredentials : true,  cancelToken: source.token})\n//         .then( res => {\n//             setError({status: res.status, message: res.statusText})\n//         })\n//         .catch(err => {\n//             setError({status: err.response.status, message: err.response.statusText})\n//         });\n//         // cancel the request before component unmounts\n//         return () => {\n//             source.cancel();\n//         };\n//     }, [searchedUsername])\n\n//     if (error.status !== 200) {return <FlashError status={error.status} message={error.message}/>};\n\n//     return (\n\n//     )\n// }","map":{"version":3,"names":[],"sources":["E:/mern-project/front-end/src/components/messages/searchContact.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, {useState,useEffect} from 'react';\r\n// import FlashError from \"../flashError\";\r\n\r\n// export default function SearchContact(searchedUsername){\r\n//     const [searchedResult, setSearchedResult] = useState();\r\n//     const [error, setError] = useState({status: 200, message: ''});\r\n\r\n//     useEffect(() => {\r\n//         const CancelToken = axios.CancelToken;\r\n//         const source = CancelToken.source();\r\n//         axios.get(`/api/convo`, {params: { username: searchedUsername }, withCredentials : true,  cancelToken: source.token})\r\n//         .then( res => {\r\n//             setError({status: res.status, message: res.statusText})\r\n//         })\r\n//         .catch(err => {\r\n//             setError({status: err.response.status, message: err.response.statusText})\r\n//         });\r\n//         // cancel the request before component unmounts\r\n//         return () => {\r\n//             source.cancel();\r\n//         };\r\n//     }, [searchedUsername])\r\n\r\n//     if (error.status !== 200) {return <FlashError status={error.status} message={error.message}/>};\r\n\r\n//     return (\r\n         \r\n//     )\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}