{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern-project\\\\front-end\\\\src\\\\components\\\\messages\\\\messages.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport FlashError from \"../flashError\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000/');\nconst controller = new AbortController();\nexport default function Messages(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [error, setError] = useState({\n    status: 200,\n    message: ''\n  });\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState([]);\n  useEffect(() => {\n    // fetch messages\n    axios.get(`/api/convo/${id}/message/n`, {\n      withCredentials: true\n    }).then(res => {\n      setMessages([...res.data]);\n      setError({\n        status: res.status,\n        message: res.statusText\n      });\n    }).catch(err => {\n      setError({\n        status: err.response.status,\n        message: err.response.statusText\n      });\n    });\n    socket.on(\"connect\", () => {\n      console.log('connected');\n      socket.emit(\"join-room\", id);\n    });\n    socket.on('newMessage', m => {\n      console.log('Socket Listener: ', m);\n      setMessages(prevMessages => [...prevMessages, m.data]);\n    });\n    // cancel the request before component unmounts\n    return () => {\n      console.log('aborted');\n      controller.abort();\n    };\n  }, [id]);\n  function handleSendMessage(e) {\n    e.preventDefault();\n    axios.post(`/api/convo/${id}/message/n`, {\n      'message': message\n    }).then(res => {\n      socket.emit('sendMessage', {\n        res,\n        id\n      });\n      e.target[0].value = '';\n      setError({\n        status: res.status,\n        message: res.statusText\n      });\n    }).catch(err => {\n      setError({\n        status: err.response.status,\n        message: err.response.statusText\n      });\n    });\n  }\n  if (error.status !== 200) {\n    return /*#__PURE__*/_jsxDEV(FlashError, {\n      status: error.status,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 39\n    }, this);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" Sender \", m.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", m.body, \" - \", m.creationTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: neMmessage,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Your Message Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Messages, \"GRvZDhFuLv60y7coy5of+vMETNw=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useEffect","useState","axios","FlashError","io","socket","controller","AbortController","Messages","id","error","setError","status","message","messages","setMessages","setMessage","get","withCredentials","then","res","data","statusText","catch","err","response","on","console","log","emit","m","prevMessages","abort","handleSendMessage","e","preventDefault","post","target","value","map","i","sender","body","creationTime","neMmessage"],"sources":["E:/mern-project/front-end/src/components/messages/messages.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport axios from  'axios';\r\nimport FlashError from \"../flashError\";\r\nimport {io} from 'socket.io-client'\r\nconst socket = io('http://localhost:3000/');\r\nconst controller = new AbortController();\r\n\r\nexport default function Messages({id}){\r\n    const [error, setError] = useState({status: 200, message: ''});\r\n    const [messages, setMessages] = useState([])\r\n    const [message, setMessage] = useState([])\r\n\r\n    useEffect(() => {\r\n        // fetch messages\r\n        axios.get(`/api/convo/${id}/message/n`, {withCredentials : true})\r\n        .then(res => {\r\n            setMessages([...res.data])\r\n            setError({status: res.status, message: res.statusText})\r\n        })\r\n        .catch(err =>{\r\n                setError({status:  err.response.status, message: err.response.statusText})\r\n        })\r\n\r\n        socket.on(\"connect\", () => {\r\n            console.log('connected')\r\n            socket.emit(\"join-room\", id);\r\n        });\r\n        socket.on('newMessage', (m) => {\r\n            console.log('Socket Listener: ', m)\r\n            setMessages(prevMessages => [...prevMessages, m.data]\r\n            )})\r\n        // cancel the request before component unmounts\r\n        return () => {\r\n            console.log('aborted')\r\n            controller.abort()\r\n        };\r\n    }, [id])\r\n\r\n    function handleSendMessage(e){\r\n        e.preventDefault();\r\n        axios.post(`/api/convo/${id}/message/n`, {'message': message})\r\n        .then( res => {\r\n            socket.emit('sendMessage',  {res, id});\r\n            e.target[0].value ='';\r\n            setError({status: res.status, message: res.statusText});\r\n        })\r\n        .catch(err => {\r\n            setError({status: err.response.status, message: err.response.statusText});\r\n        });\r\n    }\r\n\r\n    if (error.status !== 200) {return <FlashError status={error.status} message={error.message}/>};\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n            {messages.map((m, i) =>      \r\n                <div key={i}>\r\n                    <h4> Sender {m.sender}</h4>\r\n                    <p> {m.body} - {m.creationTime}</p> \r\n                </div>\r\n            )}\r\n            </div>\r\n            <form onSubmit={handleSendMessage}>\r\n                <textarea type=\"text\" value={neMmessage} onChange={(e) => setMessage(e.target.value)} placeholder=\"Your Message Here\"></textarea>\r\n                <br/>\r\n                <button type=\"submit\"> Send</button>\r\n            </form> \r\n        </>\r\n\r\n    )\r\n    \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}